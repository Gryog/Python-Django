----Introdução ao Django: Modelo, Rotas e Views----
--AULA 01--
Criamos uma pasta para manter todo código da nossa aplicação;

Utilizamos o módulo venv, que fornece suporte para a criação de ambientes virtuais leves com seus próprios diretórios, opcionalmente isolados dos diretórios do sistema;

Utilizamos o pip para instalar o Django em nosso ambiente virtual;

Iniciamos o desenvolvimento da nossa aplicação com o comando django-admin start project alurareceita e subimos o servidor com o comando python manage.py runserver.

--AULA 02--
Criamos uma pasta templates dentro do app de receitas, para manter nossos arquivos html;

Importamos uma página estilizada, com html, css e javascript;

Carregamos esses arquivos, conhecidos como arquivos estáticos e melhoramos o visual da nossa aplicação.

--AULA 03--
Ajustamos os links da index, do logo através da template tag url;

Criamos o base.html para usar as mesmas partes do HTML em diferentes páginas da aplicação;

Evitamos código duplicado do menu e do footer criando e incluindo partials.

--AULA 04--
Aprendemos como enviar dados para o template renderizar;

Instalamos e configuramos o banco de dados Postgres com a nossa aplicação;

Criamos o modelo de receitas e mapeamos para uma tabela no banco de dados.

--AULA 05--
Aprendemos como enviar e exibir dados para uma página;

Exibimos as receitas que estão no banco de dados;

Alteramos a url da index, exibindo como cada receita é feita, seus ingredientes e outras informações.

----Integração de modelos no Django: Filtros, buscas e admin----
--AULA 01--
Adicionamos filtros, buscas e paginação alterando o código do admin.py.

--AULA 02--
Criamos o app de pessoas, elaboramos um modelo com nome e email e realizamos a migração;

Integramos o modelo de receita com o modelo de pessoa, indicando quem postou a receita;

Incluímos a função __str__ para retornar o nome da pessoa no admin no lugar de Pessoa object.

--AULA 03--
Criamos o campo publicada no models de receitas, atribuindo o valor default=False, exibindo apenas as receitas publicadas com valor True;

Incluímos o código list_editable do campo publicada no admin.py de receita e alteramos a ordenação por data;

Adicionamos o campo foto_receita, instalamos o pillow, realizamos a migração e adicionamos uma foto no bolo de chocolate.